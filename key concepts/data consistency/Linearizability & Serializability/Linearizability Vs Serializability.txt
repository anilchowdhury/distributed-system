Linearizability - It refers to updating the same data item through different operations.
It refers to state of a registar.
In plain English, under linearizability, writes should appear to be instantaneous. Imprecisely, 
once a write completes, all later reads (where “later” is defined by wall-clock start time) should 
return the value of that write or the value of a later write. Once a read returns a particular value, 
all later reads should return that value or the value of a later write.

Serializability - The effect that we get by executing a set of transactions in a serial manner, if 
same out come can be generated by same set of transcations with overlapping interval schedule
then its called serializability.
Serializability of a schedule means equivalence (in the outcome, the database state, data values) 
to a serial schedule (i.e., sequential with no transaction overlap in time) with the same transactions. 
It is the major criterion for the correctness of concurrent transactions' schedule, and thus supported 
in all general purpose database system


External Consistency - Under external consistency, the system behaves as if all transactions were executed 
sequentially, even though Cloud Spanner actually runs them across multiple servers (and possibly in 
multiple datacenters) for higher performance and availability. In addition if one transaction completes 
before another transaction starts to commit, the system guarantees that clients can never see a state 
that includes the effect of the second transaction but not the first.


Coherence - dictates how a system orders operations for a single data item in the system 
Consistency - dictates how a system orders operations for the entire set of data items in the system 
Isolation - dictates how a system orders sets of operations grouped in transactions over the entire set 
			of items in the system